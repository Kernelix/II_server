name: "Symfony Backend CI Pipeline (Docker)"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: "Build and test with Docker"
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: "Checkout with full history"
        uses: actions/checkout@v3
        with:
            fetch-depth: 0  # Получаем всю историю, а не только последний коммит
            token: ${{ secrets.GITHUB_TOKEN }}


      - name: "Set up Docker"
        uses: docker/setup-buildx-action@v2


      - name: Install Docker Compose
        run: |
            mkdir -p ~/.docker/cli-plugins
            curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
            chmod +x ~/.docker/cli-plugins/docker-compose
            docker compose version

      - name: Validate compose file
        run: docker compose -f docker-compose.ci.yml config


      - name: "Build containers (if needed)"
        if: steps.docker-changes.outputs.changed_files != ''
        run: |
          # Запускаем контейнеры в фоне
          docker compose -f docker-compose.ci.yml up -d --build

          # Ждем 20 секунд для инициализации
          sleep 20

          # Проверяем состояние всех контейнеров
          echo "=== Container status ==="
          docker compose -f docker-compose.ci.yml ps -a

          # Смотрим логи PHP
          echo "=== PHP container logs ==="
          docker compose -f docker-compose.ci.yml logs php

          # Проверяем процессы внутри контейнера
          echo "=== PHP processes ==="
          docker compose -f docker-compose.ci.yml exec php ps aux

      - name: Configure Git safely
        run: |
          docker compose -f docker-compose.ci.yml exec -T php git config --global --add safe.directory /var/www
          docker compose -f docker-compose.ci.yml exec -T php git config --global user.email "actions@github.com"
          docker compose -f docker-compose.ci.yml exec -T php git config --global user.name "GitHub Actions"

      - name: "Wait for MySQL"
        run: |
          docker compose -f docker-compose.ci.yml exec -T mysql bash -c 'while ! mysqladmin ping -uroot --silent; do sleep 1; done'

      - name: "Install dependencies"
        run: |
            docker compose -f docker-compose.ci.yml exec -T php \
            sh -c "composer install --no-interaction --optimize-autoloader"

            - name: "Prepare database"
              run: |
                docker compose -f docker-compose.ci.yml exec -T php \
                  php bin/console doctrine:database:create --if-not-exists --env=test
                docker compose -f docker-compose.ci.yml exec -T php \
                  php bin/console doctrine:schema:update --force --env=test

      - name: "Run tests"
        run: |
          docker compose -f docker-compose.ci.yml exec -T php bash -c 'composer install'
          docker compose -f docker-compose.ci.yml exec -T php bash -c 'php bin/console doctrine:database:create --if-not-exists --env=test'
          docker compose -f docker-compose.ci.yml exec -T php bash -c 'php bin/console doctrine:schema:update --force --complete --env=test'
          docker compose -f docker-compose.ci.yml exec -T php bash -c 'php bin/console lint:container'
          docker compose -f docker-compose.ci.yml exec -T php bash -c 'vendor/bin/phpunit'
          
      - name: "Run PHPStan"
        run: |
          docker compose -f docker-compose.ci.yml exec -T php bash -c '
          export REDIS_URL=redis://redis:6379
          export DATABASE_URL="mysql://root:root@mysql:3306/sentihell?serverVersion=8.0.41"
          vendor/bin/phpstan analyse --configuration=phpstan.neon'

      - name: Run PHP-CS-Fixer
        run: docker compose exec -T php php-cs-fixer fix --diff --verbose

      - name: Apply fixes
        run: |
                docker compose exec -T php phpcbf --standard=PSR12 src/ || echo "PHPCBF made some fixes"

      - name: Final check
        run: docker compose exec -T php phpcs --standard=PSR12 --colors -p src/

      - name: Commit and push
        if: success()
        run: |
          docker compose -f docker-compose.ci.yml exec -T php sh -c '
          git add . &&
          if ! git diff --cached --quiet; then
          git commit -m "Apply automatic code style fixes [skip ci]" &&
          git pull --rebase origin main &&
          git push origin main
          else
          echo "No changes to commit"
          fi
          '