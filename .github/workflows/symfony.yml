name: "Symfony Backend CI Pipeline"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: "Build and test Symfony application"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sentihell
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Setup PHP 8.3"
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: none
          tools: composer:2.7.7

      - name: Validate composer
        run: |
          composer validate --no-check-lock
          if ! composer install --dry-run 2>&1 | grep -q "Nothing to install"; then
            echo "::warning::composer.lock требует обновления. Запустите: composer update"
          fi

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --no-scripts

      - name: "Setup environment"
        run: |
          echo "DATABASE_URL=mysql://root:root@127.0.0.1:3306/sentihell?serverVersion=8&charset=utf8mb4" > .env.test
          echo "APP_ENV=test" >> .env.test
          echo "APP_SECRET=testsecret" >> .env.test

      - name: "Wait for MySQL"
        run: |
          for i in {1..10}; do
            mysqladmin ping -h 127.0.0.1 -u root -proot --silent && break || sleep 5
          done

      - name: "Prepare database"
        run: |
          php bin/console doctrine:database:create --if-not-exists --env=test
          php bin/console doctrine:schema:update --force --complete --env=test

      - name: "Run linting"
        run: |
          php bin/console lint:container
          php bin/console lint:yaml config

      - name: "Run PHPStan"
        run: vendor/bin/phpstan analyse src --level=5 --no-progress

      - name: "Run PHP-CS-Fixer"
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: "PSR-12 Check and Fix"
        run: |
          composer require --dev squizlabs/php_codesniffer
          ./vendor/bin/phpcbf --standard=PSR12 src/ || true
          ./vendor/bin/phpcs --standard=PSR12 --colors -p --warning-severity=0 src/
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "Automated PSR-12 fixes" && git push)