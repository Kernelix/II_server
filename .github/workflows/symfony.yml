name: "Symfony Backend CI Pipeline (Docker)"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: "Build and test with Docker"
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Set up Docker"
        uses: docker/setup-buildx-action@v2

      - name: "Install Docker Compose"
        run: |
                sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
                docker-compose --version

      - name: "Start containers"
        run: |
          docker-compose -f docker-compose.ci.yml up -d --build
          docker-compose -f docker-compose.ci.yml ps

      - name: "Wait for MySQL"
        run: |
          docker-compose -f docker-compose.ci.yml exec -T mysql bash -c 'while ! mysqladmin ping -uroot --silent; do sleep 1; done'

      - name: "Run tests"
        run: |
          docker-compose -f docker-compose.ci.yml exec -T php bash -c 'composer install'
          docker-compose -f docker-compose.ci.yml exec -T php bash -c 'php bin/console doctrine:database:create --if-not-exists --env=test'
          docker-compose -f docker-compose.ci.yml exec -T php bash -c 'php bin/console doctrine:schema:update --force --complete --env=test'
          docker-compose -f docker-compose.ci.yml exec -T php bash -c 'php bin/console lint:container'
          docker-compose -f docker-compose.ci.yml exec -T php bash -c 'vendor/bin/phpunit'
          
      - name: "Run PHPStan"
        run: |
          docker-compose -f docker-compose.ci.yml exec -T php bash -c '
          export REDIS_URL=redis://redis:6379
          export DATABASE_URL="mysql://root:root@mysql:3306/sentihell?serverVersion=8.0.41"
          vendor/bin/phpstan analyse --configuration=phpstan.neon'

      - name: "CS Checks"
        run: |
          docker-compose -f docker-compose.ci.yml exec -T php bash -c 'vendor/bin/php-cs-fixer fix --dry-run --diff'
          docker-compose -f docker-compose.ci.yml exec -T php bash -c './vendor/bin/phpcs --standard=PSR12 --colors -p --warning-severity=0 src/'

      - name: "Push fixes"
        if: failure()
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Automated PSR-12 fixes" || true
          git push || true