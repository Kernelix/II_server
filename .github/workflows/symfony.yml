name: Symfony CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            fetch-depth: 0  # Полная история коммитов

      - name: Set shell by OS
        run: |
          echo "Выбран shell для $RUNNER_OS"
        shell: bash

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer:v2.7.7  # Фиксируем версию
          coverage: none

      - name: Fix line endings (для Windows)
        run: |
          git config --global core.autocrlf false
          git rm --cached -r .
          git reset --hard

      - name: Validate composer
        run: |
          composer validate --strict
          composer install --dry-run 2>&1 | Out-String -Stream | Select-String -Pattern "Nothing to install" -Quiet
          if ($LASTEXITCODE -ne 0) {
            Write-Error "composer.lock не синхронизирован"
            exit 1
          }

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction --no-scripts

      - name: "Setup environment"
        run: |
          echo "DATABASE_URL=mysql://root:root@127.0.0.1:3306/sentihell?serverVersion=8&charset=utf8mb4" > .env.test
          echo "APP_ENV=test" >> .env.test
          echo "APP_SECRET=testsecret" >> .env.test

      - name: "Wait for MySQL"
        run: |
          for i in {1..10}; do
            mysqladmin ping -h 127.0.0.1 -u root -proot --silent && break || sleep 5
          done

      - name: "Prepare database"
        run: |
          php bin/console doctrine:database:create --if-not-exists --env=test
          php bin/console doctrine:schema:update --force --complete --env=test

      - name: "Run linting"
        run: |
          php bin/console lint:container
          php bin/console lint:twig templates
          php bin/console lint:yaml config

      - name: "Run PHPStan"
        run: vendor/bin/phpstan analyse src --level=5 --no-progress

      - name: "Run PHP-CS-Fixer"
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: "PSR-12 Check and Fix"
        run: |
              composer require --dev squizlabs/php_codesniffer
              # Пытаемся автоматически исправить ошибки
              ./vendor/bin/phpcbf --standard=PSR12 src/ || true
              # Проверяем соответствие
              ./vendor/bin/phpcs --standard=PSR12 --colors -p --warning-severity=0 src/
